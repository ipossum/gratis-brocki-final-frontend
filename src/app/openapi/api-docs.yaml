openapi: 3.0.1
info:
  title: GratisBrockiBackend API
  version: '@springdoc.version@'
servers:
- url: http://localhost:8080
security:
- bearerAuth: []
paths:
  /api/v1/users/{id}:
    get:
      tags:
      - user-controller
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/v1/items/{id}:
    get:
      tags:
      - item-controller
      operationId: getItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemDto'
    put:
      tags:
      - item-controller
      operationId: updateItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdateDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemDto'
    delete:
      tags:
      - item-controller
      operationId: deleteItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/v1/users:
    post:
      tags:
      - user-controller
      operationId: registerNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreationDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
  /api/v1/pictures:
    get:
      tags:
      - picture-controller
      operationId: getPictures
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PictureDto'
    post:
      tags:
      - picture-controller
      operationId: addNewPicture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PictureCreationDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PictureDto'
  /api/v1/items:
    get:
      tags:
      - item-controller
      operationId: getItems_1
      parameters:
      - name: search
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemDto'
    post:
      tags:
      - item-controller
      operationId: createNewItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreationDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemDto'
  /api/v1/messages:
    get:
      tags:
      - message-controller
      operationId: getItems
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
  /api/v1/pictures/{id}:
    delete:
      tags:
      - picture-controller
      operationId: deletePicture
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    UserUpdateDto:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        phoneNumber:
          type: string
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        role:
          type: string
          enum:
          - ADMIN
          - MODERATOR
          - USER
    ItemUpdateDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        zipCode:
          type: integer
          format: int32
        category:
          type: string
          enum:
          - ChildrenItemCategory
          - ClothingItemCategory
          - GardenItemCategory
          - HouseholdItemCategory
          - SportItemCategory
          - VehicleItemCategory
          - OtherItemCategory
        condition:
          type: string
          enum:
          - USED
          - NEW
          - DEFECTIVE
        pictures:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PictureDto'
    PictureDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        url:
          type: string
        itemId:
          type: integer
          format: int64
    ItemDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        zipCode:
          type: integer
          format: int32
        category:
          type: string
          enum:
          - ChildrenItemCategory
          - ClothingItemCategory
          - GardenItemCategory
          - HouseholdItemCategory
          - SportItemCategory
          - VehicleItemCategory
          - OtherItemCategory
        condition:
          type: string
          enum:
          - USED
          - NEW
          - DEFECTIVE
        userId:
          type: integer
          format: int64
        pictures:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PictureDto'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageDto'
    MessageDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        message:
          type: string
    UserCreationDto:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        phoneNumber:
          type: string
    PictureCreationDto:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        itemId:
          type: integer
          format: int64
    ItemCreationDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        zipCode:
          type: integer
          format: int32
        category:
          type: string
          enum:
          - ChildrenItemCategory
          - ClothingItemCategory
          - GardenItemCategory
          - HouseholdItemCategory
          - SportItemCategory
          - VehicleItemCategory
          - OtherItemCategory
        condition:
          type: string
          enum:
          - USED
          - NEW
          - DEFECTIVE
        userId:
          type: integer
          format: int64
        pictures:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PictureDto'
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        archivedDate:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        zipCode:
          type: integer
          format: int32
        category:
          type: string
          enum:
          - ChildrenItemCategory
          - ClothingItemCategory
          - GardenItemCategory
          - HouseholdItemCategory
          - SportItemCategory
          - VehicleItemCategory
          - OtherItemCategory
        condition:
          type: string
          enum:
          - USED
          - NEW
          - DEFECTIVE
        owner:
          $ref: '#/components/schemas/User'
        pictures:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Picture'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        archivedDate:
          type: string
          format: date-time
        message:
          type: string
        item:
          $ref: '#/components/schemas/Item'
    Picture:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        archivedDate:
          type: string
          format: date-time
        name:
          type: string
        url:
          type: string
        item:
          $ref: '#/components/schemas/Item'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        archivedDate:
          type: string
          format: date-time
        username:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
          - ADMIN
          - MODERATOR
          - USER
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        credentialsNonExpired:
          type: boolean
        enabled:
          type: boolean
        items:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item'
  securitySchemes:
    bearerAuth:
      type: http
      name: bearerAuth
      scheme: bearer
      bearerFormat: JWT
